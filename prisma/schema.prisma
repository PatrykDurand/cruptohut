// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int      @id @default(autoincrement())
  login        String   @unique
  email        String   @unique
  password     String
  name         String
  surname      String
  address      String
  birthDate    DateTime
  idCardNumber String   @unique
  isVerified   Boolean  @default(false)

  accounts   Account[]
  recipients Recipient[]
}

model Account {
  accountId     Int     @id @default(autoincrement())
  userID        Int
  accountNumber String  @unique
  balance       Decimal @default(0)
  accountType   String
  accountStatus String  @default("Active")

  user User @relation(fields: [userID], references: [userId])

  sentTransactions     Transaction[] @relation("SenderAccount")
  receivedTransactions Transaction[] @relation("RecipientAccount")
}

model Transaction {
  transactionID          Int      @id @default(autoincrement())
  senderAccountId        Int
  recipientAccountNumber String
  amount                 Decimal
  date                   DateTime
  title                  String

  senderAccount    Account  @relation("SenderAccount", fields: [senderAccountId], references: [accountId])
  recipientAccount Account? @relation("RecipientAccount", fields: [recipientAccountNumber], references: [accountNumber])
}

model Session {
  sessionID Int      @id @default(autoincrement())
  time      DateTime
  status    String
}

model Role {
  roleID     Int    @id @default(autoincrement())
  employeeID Int
  name       String

  employee BankAdmin @relation(fields: [employeeID], references: [employeeId])
}

model BankAdmin {
  employeeId Int    @id @default(autoincrement())
  email      String @unique
  password   String
  name       String
  surname    String
  roles      Role[]
}

model Recipient {
  recipientId   Int     @id @default(autoincrement())
  userID        Int
  name          String
  surname       String
  accountNumber String
  trusted       Boolean @default(true)

  user User @relation(fields: [userID], references: [userId])
}
